{{>layout/header2}}
<link rel="stylesheet" href="/css/path.css" />

<body class="subpage">

    <header id="header">
        <div class="inner">
            <a href="/" class="logo"><strong>Save Our City</strong></a>
            <nav id="nav">
                <!--로그인탭-->
                {{#userName}}
                    사용자: <span id="user">{{userName}}</span>
                    <a href="/logout"  role="button">로그아웃</a>
                {{/userName}}
                {{^userName}}
                    <a href="/oauth2/authorization/google"  role="button">로그인</a>
                {{/userName}}
                <a href="/">홈</a>
                <a href="/list">목록</a>
                <a href="/path">경로</a>
                <a href="/statistics">통계</a>
            </nav>
            <a href="#navPanel" class="navPanelToggle"><span class="fa fa-bars"></span></a>
        </div>
    </header>

    <!-- Three -->
    <section id="three" class="wrapper">
        <div class="inner">
            <header class="align-center">
                <h2>최적 경로</h2>
                <p>수거자가 쓰레기를 수거할때 최적의 경로를 지도에 표시</p>
                <input type="submit" id="submit" value="경로 탐색"/>
            </header>

            <!--경로 출력 부분-->
            <div id="map"></div><br>

            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-table mr-1"></i>
                    경유지 목록
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-horizontal table-bordered">
                            <thead class="thead-strong">
                            <tr>
                                <th>쓰레기통</th>
                                <th>주소</th>
                                <th>lat</th>
                                <th>lng</th>
                                <th>적재량</th>
                            </tr>
                            </thead>
                            <tbody id="tbody">
                            {{#posts}}
                                <tr>
                                    <td><a href="/posts/update/{{id}}">{{device_nm}}</a></td>
                                    <td>{{address}}</td>
                                    <td>{{latitude}}</td>
                                    <td>{{longitude}}</td>
                                    <td>{{current_loadage}}%</td>
                                </tr>
                            {{/posts}}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-table mr-1"></i>
                    상세 노선
                </div>
                <div class="card-body">
                    <div id="route-panel">
                    </div>
                </div>
            </div>
            <!--<div id="route-panel"></div>-->



        </div>
    </section>

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBi-cLA2_XUrjOs-MI8SyA8SyjeZ5IrcUU&callback=initMap&libraries=&v=weekly&language=ko&region=KR"
            defer
    ></script><!--언어 설정 : &language=en&region=US -->
    <!--waypoints script-->
    <script>
        "use strict";

        /* 맵 시작 */
        function initMap() {
            const directionsService = new google.maps.DirectionsService();
            const directionsRenderer = new google.maps.DirectionsRenderer();
            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 6,
                center: {
                    lat: 41.85,
                    lng: -87.65
                }
            });
            directionsRenderer.setMap(map);
            /* submit 버튼 클릭 시 경로탐색 실행 */
            document.getElementById("submit").addEventListener("click", () => {
                calculateAndDisplayRoute(directionsService, directionsRenderer);
            });
        }

        /* 경로탐색 */
        function calculateAndDisplayRoute(directionsService, directionsRenderer) {
            var table = document.querySelector("table");
            //var output = document.querySelector("pre");
            var data = parseTable(table);//테이블을 배열로 변환
            const waypts = [];//경유지
            //console.log(data);
            //const checkboxArray = document.getElementById("waypoints");

            /* 원본
            for (let i = 0; i < checkboxArray.length; i++) {
                if (checkboxArray.options[i].selected) {
                    waypts.push({
                        location: checkboxArray[i].value,
                        stopover: true
                    });
                }
            }
            */
            for (let i = 0; i < data.length; i++) {
                data[i].lat = Number(data[i].lat);
                data[i].lng = Number(data[i].lng);
                waypts.push({//data의 location을 waypts에 push
                    location: {
                        lat: data[i].lat,
                        lng: data[i].lng
                    },
                    stopover: true//경유지가 경로의 정류장임을 나타내는 부울이며 경로를 두 경로로 분할하는 효과가 있습니다.라고 함
                });
            }
            console.log(typeof(data[0].lat));

            directionsService.route(
                    {
                        origin: {//출발지: LAZ Parking Garage
                            lat: 40.733458,
                            lng: -73.980218
                        },
                        destination: {//도착지: Evergreen Recycling of Corona
                            lat: 40.762136,
                            lng: -73.841756
                        },
                        waypoints: waypts,
                        optimizeWaypoints: true,
                        travelMode: google.maps.TravelMode.DRIVING
                    },
                    (response, status) => {
                        if (status === "OK") {
                            directionsRenderer.setDirections(response);
                            const route = response.routes[0];
                            const summaryPanel = document.getElementById("route-panel");
                            summaryPanel.innerHTML = ""; // For each route, display summary information.

                            for (let i = 0; i < route.legs.length; i++) {
                                const routeSegment = i + 1;
                                //상세경로 영어 Route Segment
                                summaryPanel.innerHTML +=
                                        "<b>상세 경로: " + routeSegment + "</b><br>";
                                summaryPanel.innerHTML += "출발지: " + route.legs[i].start_address + "<br>";
                                summaryPanel.innerHTML += "도착지: " + route.legs[i].end_address + "<br>";
                                summaryPanel.innerHTML +=
                                        "거리: " + route.legs[i].distance.text + "<br><br>";
                            }
                        } else {
                            window.alert("Directions request failed due to " + status);
                        }
                    }
            );
        }
    </script>

    <script>
        //var table = document.querySelector("table");
        //var output = document.querySelector("pre");
        //var data = parseTable(table);
        //console.log(data);
        // OUTPUTS
        // =======
        //
        // [
        //   {
        //     name: "dave",
        //     age: "35",
        //     "eye colour": "blue",
        //     "coffee?": true,
        //     food: "sandwich"
        //   },
        //   {
        //     name: "sarah",
        //     age: "29",
        //     "eye colour": "brown",
        //     "coffee?": true,
        //     food: "soup"
        //   },
        //   {
        //     name: "john",
        //     age: "42",
        //     "eye colour": "green",
        //     "coffee?": false,
        //     food: "stew"
        //   }
        // ]

        function mapRow(headings) {
            return function mapRowToObject({ cells }) {
                return [...cells].reduce(function(result, cell, i) {
                    const input = cell.querySelector("input,select");
                    var value;

                    if (input) {
                        value = input.type === "checkbox" ? input.checked : input.value;
                    } else {
                        value = cell.innerText;
                    }

                    return Object.assign(result, { [headings[i]]: value });
                }, {});
            };
        }

        function parseTable(table) {
            var headings = [...table.tHead.rows[0].cells].map(
                    heading => heading.innerText
            );

            return [...table.tBodies[0].rows].map(mapRow(headings));
        }
    </script>
{{>layout/footer2}}